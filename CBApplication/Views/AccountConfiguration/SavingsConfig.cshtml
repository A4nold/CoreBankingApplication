@model CBApplication.Core.ViewModels.SavingsConfigurationViewModels
@{
    ViewBag.Title = "Savings Account Configurations";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("SavingsConfig", "AccountConfiguration", FormMethod.Post,
    new { @class = "form-horizontal col-md-6 col-md-offset-3 card-box display", id = "savings" }))
{
    <h4>@ViewBag.Title</h4>
    @Html.AntiForgeryToken()

    <div class="">
        @if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
        {
            if (ViewBag.Message != null)
            {
                <div class="alert alert-success">
                    <strong>
                        Success!
                    </strong>@ViewBag.Message
                </div>
            }
        }
    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.CreditInterestRate)
        @Html.TextBoxFor(model => model.CreditInterestRate, new { @class = "form-control", id = "CIT", Name = "Interest", step = "0.01", min = 0, Type = "number" })
        @Html.ValidationMessageFor(model => model.CreditInterestRate, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MinBalance)
        @Html.TextBoxFor(model => model.MinBalance, new { @class = "form-control", id = "minBalance", Name = "Balance", step = "0.01", min = 100, Type = "number" })
        @Html.ValidationMessageFor(model => model.MinBalance, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.DropDownListFor(model => model.GlAccountId,
            new SelectList(Model.ExpenseAccount, "Id", "Name"),
            "Select Savings Expense Account", new { @class = "form-control",id="expense", Name = "Expense" })
        @Html.ValidationMessageFor(model => model.GlAccountId, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.DropDownListFor(model => model.SavingsInterestPayableGlId,
            new SelectList(Model.PayableAccount, "Id", "Name"),
            "Select Savings Payable Account", new { @class = "form-control",id="payable", Name = "Payable" })
        @Html.ValidationMessageFor(model => model.SavingsInterestPayableGlId, "", new { @class = "text-danger" })
    </div>


    <div class="form-group">
        <input type="hidden" name="Id" value="@Model.Id" />
    </div>


    <div class="form-group">
        <div class="">
            <input type="submit" value="SUBMIT" class="btn btn-primary btn-flat" />
        </div>
    </div>

}

@section ViewSpecificJavascript
{
    <script>
        $(document).ready(function () {
            $("#savings").submit(function (e) {

                var cit = $("#CIT").val();
                var balance = $("#minBalance").val();
                var expense = $("#expense").val();
                var payable = $("#payable").val();

                $(".error").remove();

                if ($("#savings").submit) {
                    $("form *").removeClass("error-box");
                }

                if (cit.length < 1) {
                    $("#CIT").addClass("error-box");
                    $("#CIT").after('<span class="error">This Field is Required</span>');
                } else {
                    var regExp = /^[(.0-9)]*$/;

                    var validNumber = regExp.test(cit);
                    if (!validNumber) {
                        $("#CIT").addClass("error-box");
                        $('#CIT').after('<span class="error">Enter a valid value</span>');
                        e.preventDefault();

                    }
                }

                if (balance.length < 1) {
                    $("#minBalance").addClass("error-box");
                    $("#minBalance").after('<span class="error">This Field is Required</span>');
                } else {
                    var regExp = /^[(.0-9)]*$/;

                    var validNumber = regExp.test(balance);
                    if (!validNumber) {
                        $("#minBalance").addClass("error-box");
                        $('#minBalance').after('<span class="error">Enter a valid minimum balance</span>');
                        e.preventDefault();

                    }
                }

                if (expense.length < 1) {
                    $("#expense").addClass("error-box");
                    $("#expense").after('<span class="error">This Field is Required</span>');
                    e.preventDefault();
                }

                if (payable.length < 1) {
                    $("#payable").addClass("error-box");
                    $("#payable").after('<span class="error">This Field is Required</span>');
                    e.preventDefault();
                }
            });
        })
    </script>
}
